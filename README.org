* Luke's Auto-Rice Bootstrapping Scripts (LARBS)
:PROPERTIES:
:CUSTOM_ID: lukes-auto-rice-bootstrapping-scripts-larbs
:END:
#+caption: logo
[[file:static/pix/cumflarbs.png]]

** Installation:
:PROPERTIES:
:CUSTOM_ID: installation
:END:
On an Arch-based distribution as root, run the following:

#+begin_example
curl -LO https://raw.githubusercontent.com/chumutt/CUMFLARBS/main/static/larbs.sh
sh larbs.sh
#+end_example

That's it.

** What is LARBS?
:PROPERTIES:
:CUSTOM_ID: what-is-larbs
:END:
LARBS is a script that autoinstalls and autoconfigures a
fully-functioning and minimal terminal-and-vim-based Arch Linux
environment.

LARBS can be run on a fresh install of Arch or Artix Linux, and provides
you with a fully configured diving-board for work or more customization.

** Customization
:PROPERTIES:
:CUSTOM_ID: customization
:END:
By default, LARBS uses the programs [[file:static/progs.csv][here in
progs.csv]] and installs [[https://github.com/chumutt/voidrice][my
dotfiles repo (voidrice) here]], but you can easily change this by
either modifying the default variables at the beginning of the script or
giving the script one of these options:

- =-r=: custom dotfiles repository (URL)
- =-p=: custom programs list/dependencies (local file or URL)
- =-a=: a custom AUR helper (must be able to install with =-S= unless
  you change the relevant line in the script

*** The =progs.csv= list
:PROPERTIES:
:CUSTOM_ID: the-progs.csv-list
:END:
LARBS will parse the given programs list and install all given programs.
Note that the programs file must be a three column =.csv=.

The first column is a "tag" that determines how the program is
installed, “” (blank) for the main repository, =A= for via the AUR or
=G= if the program is a git repository that is meant to be
=make && sudo make install=ed.

The second column is the name of the program in the repository, or the
link to the git repository, and the third column is a description
(should be a verb phrase) that describes the program. During
installation, LARBS will print out this information in a grammatical
sentence. It also doubles as documentation for people who read the CSV
and want to install my dotfiles manually.

Depending on your own build, you may want to tactically order the
programs in your programs file. LARBS will install from the top to the
bottom.

If you include commas in your program descriptions, be sure to include
double quotes around the whole description to ensure correct parsing.

*** The script itself
:PROPERTIES:
:CUSTOM_ID: the-script-itself
:END:
The script is extensively divided into functions for easier readability
and trouble-shooting. Most everything should be self-explanatory.

The main work is done by the =installationloop= function, which iterates
through the programs file and determines based on the tag of each
program, which commands to run to install it. You can easily add new
methods of installations and tags as well.

Note that programs from the AUR can only be built by a non-root user.
What LARBS does to bypass this by default is to temporarily allow the
newly created user to use =sudo= without a password (so the user won't
be prompted for a password multiple times in installation). This is done
ad-hocly, but effectively with the =newperms= function. At the end of
installation, =newperms= removes those settings, giving the user the
ability to run only several basic sudo commands without a password
(=shutdown=, =reboot=, =pacman -Syu=).
* Chu's Untitled Modification for Luke's Auto-Rice Bootstrapping Scripts (CUMFLARBS)
** post install instructions
1. log in as user and verify internet connectivity (open a network manager (~nmtui~) with ~Ctrl+Shift+W~ if on wi-fi).
2. copy over your keys from ~/.gnupg on your current setup if you have one / backed one up
3. copy over your password store from your current setup if you have one
4. run =emacs=
5. press y to download fonts
6. press M-x (ALT + x) and search for =nerd-icons-install-fonts= by typing its name
7. press ENTER to run the function
8. if you use C family programming languages do the same and run =lsp-install-server= in emacs and install clang and cmake servers
9. press y again to download and install the fonts
10. press SPACE q q or Logo key + q to close emacs
11. reboot and emacs daemon should start automatically this time upon login
12. change ~/.config/redshift.conf to your own latitude and longitude settings if using a VPN (it should detect your location automatically otherwise). redshift is autostarted (~/.xprofile).
13. open browser by pressing Logo key + w
14. accept preinstalled browser add-ons
* TODO List
** TODO rm arkenfox.js
** TODO rm librewolf-bin
** TODO rm -rf on /etc/ssh/sshd_config.d/* upon install for "clear" defaults
